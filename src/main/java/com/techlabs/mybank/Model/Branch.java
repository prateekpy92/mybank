package com.techlabs.mybank.Model;
import lombok.*;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import javax.persistence.*;
import javax.validation.constraints.NotNull;

@Entity
@Table
@AllArgsConstructor
@NoArgsConstructor // Lombok annotation for no-arg constructor
@Getter
@Setter
@ToString
public class Branch {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "branch_id")
    private int id;

    @NotNull
    private String branchName;

    @NotNull
    @Column(unique = true)
    private String branchIfscCode;

    @NotNull
    private String branchManager;

    @NotNull
    private long helpLineNo;

    @NotNull
    private String branchAddress;

    @ManyToOne
    @JoinColumn(name = "bank_id", nullable = false)
    @OnDelete(action = OnDeleteAction.CASCADE)
    private Bank bank;

    @NotNull
    private String activeState;

    // Manually adding the no-arg constructor, just in case Lombok isn't working
    public Branch() {
        // Required by Hibernate
    }

    // Parameterized constructor
    public Branch(int id, @NotNull String branchName, @NotNull String branchIfscCode, @NotNull String branchManager,
                  @NotNull long helpLineNo, @NotNull String branchAddress, Bank bank, @NotNull String activeState) {
        this.id = id;
        this.branchName = branchName;
        this.branchIfscCode = branchIfscCode;
        this.branchManager = branchManager;
        this.helpLineNo = helpLineNo;
        this.branchAddress = branchAddress;
        this.bank = bank;
        this.activeState = activeState;
    }

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getBranchName() {
		return branchName;
	}

	public void setBranchName(String branchName) {
		this.branchName = branchName;
	}

	public String getBranchIfscCode() {
		return branchIfscCode;
	}

	public void setBranchIfscCode(String branchIfscCode) {
		this.branchIfscCode = branchIfscCode;
	}

	public String getBranchManager() {
		return branchManager;
	}

	public void setBranchManager(String branchManager) {
		this.branchManager = branchManager;
	}

	public long getHelpLineNo() {
		return helpLineNo;
	}

	public void setHelpLineNo(long helpLineNo) {
		this.helpLineNo = helpLineNo;
	}

	public String getBranchAddress() {
		return branchAddress;
	}

	public void setBranchAddress(String branchAddress) {
		this.branchAddress = branchAddress;
	}

	public Bank getBank() {
		return bank;
	}

	public void setBank(Bank bank) {
		this.bank = bank;
	}

	public String getActiveState() {
		return activeState;
	}

	public void setActiveState(String activeState) {
		this.activeState = activeState;
	}

    // Getters and Setters are automatically generated by Lombok
}
